{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"_t",
				"_time"
			],
			[
				"task",
				"task"
			],
			[
				"uint",
				"uint32_t"
			],
			[
				"Task",
				"TaskerBase"
			],
			[
				"stati",
				"static_cast"
			],
			[
				"uin",
				"uint32_t"
			],
			[
				"print",
				"printprechar"
			],
			[
				"prin",
				"printprechar"
			],
			[
				"Tas",
				"TaskType"
			],
			[
				"is",
				"isEmpty"
			],
			[
				"do",
				"doNotDelete"
			],
			[
				"null",
				"nullptr"
			],
			[
				"sub",
				"subTaskerIndex"
			],
			[
				"T",
				"TaskType"
			],
			[
				"ind",
				"indentlevel"
			],
			[
				"in",
				"indentlevel"
			],
			[
				"weak",
				"weak_ptr"
			],
			[
				"we",
				"weak_ptr"
			],
			[
				"us",
				"useMicros"
			],
			[
				"remove",
				"removeSubLoop"
			],
			[
				"_",
				"_baseList"
			],
			[
				"pu",
				"push_back"
			],
			[
				"Tasker",
				"TaskerBase"
			],
			[
				"run",
				"RunImmediately"
			],
			[
				"ty",
				"typename"
			],
			[
				"get",
				"getParentTask"
			],
			[
				"P",
				"ParentTasker"
			],
			[
				"l",
				"lambda"
			],
			[
				"_re",
				"_repeatNo"
			],
			[
				"del",
				"deleteAfter"
			],
			[
				"Loop",
				"LoopMethod"
			],
			[
				"pr",
				"priority"
			],
			[
				"_lo",
				"_loopCounter"
			],
			[
				"loo",
				"loopCycles"
			],
			[
				"_c",
				"_count2"
			],
			[
				"has",
				"hasOwnProperty"
			],
			[
				"ran",
				"random_number"
			],
			[
				"EQ",
				"EQParam"
			],
			[
				"g",
				"gowhite"
			],
			[
				"p",
				"progress"
			],
			[
				"be",
				"beatstimeout"
			],
			[
				"Deb",
				"DebugMelvanimate"
			],
			[
				"upload",
				"upload_port"
			],
			[
				"_has",
				"_hasChanged"
			],
			[
				"_h",
				"_hasChanged"
			],
			[
				"page",
				"pagemanager"
			],
			[
				"sel",
				"_selecteditem"
			],
			[
				"han",
				"handled"
			],
			[
				"_a",
				"_active"
			],
			[
				"ha",
				"handleinput"
			],
			[
				"_s",
				"_selecteditem"
			],
			[
				"_f",
				"_firstitem"
			],
			[
				"_fun",
				"_changefunc"
			],
			[
				"flas",
				"_flashstate"
			],
			[
				"las",
				"_lastupdate"
			],
			[
				"S",
				"SHORT_PRESS"
			],
			[
				"se",
				"setCursor"
			],
			[
				"_y",
				"_y2"
			],
			[
				"vir",
				"virtual_item"
			],
			[
				"st",
				"static_cast"
			],
			[
				"int",
				"int32_t"
			],
			[
				"IN",
				"INT8_T"
			],
			[
				"u",
				"uint8_t_value"
			],
			[
				"UIN",
				"UINT8_T"
			],
			[
				"INT",
				"INT32_T"
			],
			[
				"UN",
				"UINT16_T"
			],
			[
				"typ",
				"type_t"
			],
			[
				"ne",
				"network_ID"
			],
			[
				"send",
				"senderid"
			],
			[
				"de",
				"destination"
			],
			[
				"DIG",
				"DIGITALWRITE"
			],
			[
				"Pj",
				"PJONPacket"
			],
			[
				"v",
				"uint8_t_value"
			],
			[
				"json",
				"jsonBuffer"
			],
			[
				"U",
				"UINT8_T"
			],
			[
				"boo",
				"bool_value"
			],
			[
				"sen",
				"senderid"
			],
			[
				"PJON",
				"PJONPacket"
			],
			[
				"pin",
				"pintxt"
			],
			[
				"re",
				"returnroot"
			],
			[
				"byte",
				"byte_value"
			],
			[
				"pa",
				"parseJson"
			],
			[
				"_d",
				"_deinitialise"
			],
			[
				"ena",
				"enableeq"
			],
			[
				"D",
				"DebugMelvanimatef"
			],
			[
				"_sam",
				"_samples"
			],
			[
				"samp",
				"sampletime"
			],
			[
				"_sa",
				"_sampletime"
			],
			[
				"peak",
				"_peakfactor"
			],
			[
				"In",
				"Initialise"
			],
			[
				"_p",
				"_peakfactor"
			],
			[
				"R",
				"RgbColor"
			],
			[
				"fade",
				"fadepc"
			],
			[
				"up",
				"updatedColor"
			],
			[
				"fad",
				"fadepc"
			],
			[
				"time",
				"timefor"
			],
			[
				"as",
				"asString"
			],
			[
				"buf",
				"buff"
			],
			[
				"H",
				"HTTPClient"
			],
			[
				"http",
				"httpclient"
			],
			[
				"si",
				"size_t"
			],
			[
				"ch",
				"changeinputflag"
			],
			[
				"_r",
				"_random"
			],
			[
				"Pa",
				"Palette"
			],
			[
				"mq",
				"mqtt_port"
			],
			[
				"mqtt",
				"mqtt_ip"
			],
			[
				"ip",
				"ip"
			],
			[
				"Json",
				"JsonObject"
			],
			[
				"_ha",
				"_handleWebRequest"
			],
			[
				"enable",
				"enablemqtt"
			],
			[
				"en",
				"enabled"
			],
			[
				"only",
				"onlychanged"
			],
			[
				"_m",
				"_msg"
			],
			[
				"cl",
				"_client"
			],
			[
				"pri",
				"private"
			],
			[
				"_se",
				"_sendChangedJson"
			],
			[
				"cre",
				"createNestedObject"
			],
			[
				"m",
				"mqttjson"
			],
			[
				"Js",
				"JsonObject"
			],
			[
				"M",
				"Melvanimate"
			],
			[
				"end",
				"endsWith"
			],
			[
				"n",
				"nullptr"
			],
			[
				"MQ",
				"MQTTjson"
			],
			[
				"con",
				"containsKey"
			],
			[
				"shape",
				"shape"
			],
			[
				"sh",
				"shapemode"
			],
			[
				"fill",
				"fillRect"
			],
			[
				"dra",
				"drawCircle"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/TaskerClass.h",
			"settings":
			{
				"buffer_size": 5908,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"PlatformIO",
					""
				],
				[
					"PlatformIO",
					"Clean"
				],
				[
					"PlatformIO",
					"Upload"
				]
			],
			[
				"PlatformIO",
				"Upload"
			]
		],
		[
			[
				[
					"PlatformIO",
					""
				],
				[
					"PlatformIO",
					"Clean"
				],
				[
					"PlatformIO",
					"Upload"
				],
				[
					"PlatformIO",
					"SPIFFS"
				]
			],
			[
				"PlatformIO",
				""
			]
		],
		[
			[
				[
					"PlatformIO",
					""
				],
				[
					"PlatformIO",
					"Clean"
				],
				[
					"PlatformIO",
					"Upload"
				],
				[
					"PlatformIO",
					"Upload SPIFFS"
				]
			],
			[
				"PlatformIO",
				"Upload"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 127.0,
		"last_filter": "Markdown Preview",
		"selected_items":
		[
			[
				"Markdown Preview",
				"Markdown Preview: Preview in Browser"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Add Channel"
			],
			[
				"pace",
				"Package Control: Upgrade Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/amelvin/Documents/Arduino/libraries/tasker",
		"/Users/amelvin/Documents/Arduino/libraries/tasker/src"
	],
	"file_history":
	[
		"/Users/amelvin/Documents/Arduino/libraries/tasker/src/TaskerClass.h",
		"/Users/amelvin/Documents/Arduino/libraries/tasker/examples/ASyncTasker_with_SyncTasker_and_ASync_sub_tasker/ASyncTasker_with_SyncTasker_and_ASync_sub_tasker.ino",
		"/Users/amelvin/Documents/Arduino/libraries/Tasker/readme.md",
		"/Users/amelvin/Documents/Arduino/libraries/tasker/src/Tasker.h",
		"/Users/amelvin/Documents/Arduino/libraries/tasker/src/TaskMethods.h",
		"/Users/amelvin/Documents/Arduino/libraries/tasker/src/Task.h",
		"/Users/amelvin/Documents/Arduino/libraries/tasker/examples/Blink_example/Blink_example.ino",
		"/Users/amelvin/Documents/Arduino/libraries/tasker/examples/basic_ASYNC_tasker/ASYNC_tasker_basic.ino",
		"/Users/amelvin/Documents/Arduino/libraries/tasker/examples/basic_SYNC_tasker/SYNC_tasker_basic.ino",
		"/Users/amelvin/Documents/Arduino/libraries/tasker/examples/ASYNC_tasker_with_SYNC_subtasker/ASYNC_tasker_with_SYNC_subtasker.ino",
		"/Users/amelvin/Documents/Arduino/libraries/Tasker/src/TaskerManager.h",
		"/Users/amelvin/Documents/Arduino/libraries/Tasker/src/TaskerManager.cpp",
		"/Users/amelvin/Documents/Arduino/libraries/tasker/TaskerClass.h",
		"/Users/amelvin/Documents/Arduino/libraries/tasker/usTask.cpp",
		"/Users/amelvin/Documents/Arduino/libraries/tasker/msTask.cpp",
		"/Users/amelvin/Documents/Arduino/libraries/tasker/msTask.h",
		"/Users/amelvin/Documents/Arduino/libraries/tasker/TaskMethods.h",
		"/Users/amelvin/Documents/Arduino/libraries/tasker/Tasker.h",
		"/Users/amelvin/Documents/Arduino/libraries/tasker/Tasker.cpp",
		"/Users/amelvin/Documents/Arduino/libraries/tasker/usTask.h",
		"/Users/amelvin/git/MyMelvanimate/lib/ESPmanager/ESPmanager.cpp",
		"/Users/amelvin/git/MyMelvanimate/lib/Melvanimate/src/effects/Beats.h",
		"/Users/amelvin/git/MyMelvanimate/lib/Melvanimate/src/effects/Beats.cpp",
		"/Users/amelvin/git/MyMelvanimate/lib/Melvanimate/www/index.js",
		"/Users/amelvin/git/MyMelvanimate/platformio.ini",
		"/Users/amelvin/git/MyMelvanimate/lib/Melvanimate/src/Melvanimate.h",
		"/Users/amelvin/git/MyMelvanimate/lib/Melvanimate/src/Melvanimate.cpp",
		"/Users/amelvin/git/MyMelvanimate/lib/Melvanimate/www/index.htm",
		"/Users/amelvin/git/MyMelvanimate/lib/Melvanimate/examples/Melvanimate-example/Melvanimate-example.ino",
		"/Users/amelvin/git/MyMelvanimate/lib/Melvanimate/src/effects/SunRise.cpp",
		"/Users/amelvin/git/MyMelvanimate/lib/Melvanimate/src/MelvanimateMQTT.cpp",
		"/Users/amelvin/git/MyMelvanimate/lib/Melvanimate/examples/Melvanimate-withESPManager/Melvanimate-withESPManager.ino",
		"/Users/amelvin/git/MyMelvanimate/lib/Melvanimate/src/effects/SunRise.h",
		"/Users/amelvin/git/MyMelvanimate/lib/Melvanimate/src/effects/White.cpp",
		"/Users/amelvin/git/MyMelvanimate/MyMelvanimate/MyMelvanimate.ino",
		"/Users/amelvin/git/MyMelvanimate/lib/Melvanimate/src/effects/Shapes.cpp",
		"/Users/amelvin/git/MyMelvanimate/.travis.yml",
		"/Users/amelvin/git/MyMelvanimate/lib/Melvanimate/src/effects/BeatsTest.cpp",
		"/Users/amelvin/git/MyMelvanimate/lib/Melvanimate/src/effects/BeatsTest.h",
		"/Users/amelvin/git/MyMelvanimate/lib/Melvanimate/scripts/gulpfile.js.old",
		"/Users/amelvin/Documents/Arduino/libraries/Melvanimate/src/effects/SunRise.cpp",
		"/Users/amelvin/git/MyMelvanimate-sketch/MyMelvanimate.ino",
		"/Users/amelvin/Dropbox/Sketchbook/libraries/Melvanimate/src/effects/Shapes.h",
		"/Users/amelvin/Dropbox/Sketchbook/libraries/Melvanimate/examples/Melvanimate-withESPManager/Melvanimate-withESPManager.ino",
		"/Users/amelvin/Dropbox/Sketchbook/libraries/Melvanimate/src/Melvanimate.h",
		"/Users/amelvin/Dropbox/Sketchbook/libraries/Melvanimate/src/MelvanimateMQTT.h",
		"/Users/amelvin/Dropbox/Sketchbook/libraries/Melvanimate/src/ObjectManager.h",
		"/Users/amelvin/Dropbox/Sketchbook/libraries/Melvanimate/src/mybus.h",
		"/Users/amelvin/Dropbox/Sketchbook/libraries/Melvanimate/src/Palette.h",
		"/Users/amelvin/Dropbox/Sketchbook/libraries/Melvanimate/src/PropertyManager.h",
		"/Users/amelvin/Dropbox/Sketchbook/libraries/Melvanimate/src/EffectHandler.h",
		"/Users/amelvin/Dropbox/Sketchbook/libraries/Melvanimate/src/EffectManager.h",
		"/Users/amelvin/Dropbox/Sketchbook/libraries/Melvanimate/src/EffectManager.cpp",
		"/Users/amelvin/Dropbox/Sketchbook/libraries/Melvanimate/src/EQ.h",
		"/Users/amelvin/Dropbox/Sketchbook/libraries/Melvanimate/examples/Melvanimate-example/data/index.htm",
		"/Users/amelvin/Dropbox/Sketchbook/libraries/Melvanimate/examples/Melvanimate-withESPManager/data/index.htm",
		"/Users/amelvin/Dropbox/Sketchbook/libraries/Melvanimate/src/Melvanimate.cpp",
		"/Users/amelvin/Dropbox/Sketchbook/libraries/Melvanimate/examples/Melvanimate-example/Melvanimate-example.ino",
		"/Users/amelvin/Dropbox/Sketchbook/libraries/ESPAsyncWebServer/src/WebRequest.cpp",
		"/Users/amelvin/Dropbox/Sketchbook/libraries/ESPAsyncWebServer/src/ESPAsyncWebServer.h",
		"/Users/amelvin/Dropbox/Sketchbook/libraries/CamperOS/src/camperOS.cpp",
		"/Users/amelvin/Dropbox/Sketchbook/libraries/CamperOS/src/PJONPacket.h",
		"/Users/amelvin/Dropbox/Sketchbook/libraries/CamperOS/src/camperOS.h",
		"/Users/amelvin/Dropbox/Sketchbook/libraries/CamperOS/src/item.h",
		"/Users/amelvin/Arduino/esp8266/libraries/ESP8266WiFi/src/WiFiUdp.h",
		"/Users/amelvin/Arduino/esp8266/libraries/ESP8266WiFi/src/WiFiUdp.cpp",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/effects/UDPEffect.cpp",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/effects/Snakes.cpp",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/effects/RainbowChase.cpp",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/effects/EQvisualiser.cpp",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/effects/DMXEffect.cpp",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/helperfunc.h",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/MelvanimateMQTT.cpp",
		"/Users/amelvin/platformio/melvanimate/platformio.sublime-project",
		"/Users/amelvin/platformio/melvanimate/.pioenvs/nodemcu2/melvanimate/Melvanimate.h",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/effects/AdalightEffect.cpp",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/EffectManager.cpp",
		"/Users/amelvin/platformio/melvanimate/lib/ESPmanager/ESPmanager.cpp",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/EffectManager.h",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/Melvtrix.cpp",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/EQ.h",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/EQ.cpp",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/PropertyManager.h",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/ObjectManager.h",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/mybus.h",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/effects/BeatsTest.cpp",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/effects/Blobs.cpp",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/effects/BeatsTest.h",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/EffectHandler.h",
		"/Users/amelvin/Dropbox/Sketchbook/libraries/Melvanimate/src/effects/EQ.cpp",
		"/Users/amelvin/Dropbox/Sketchbook/libraries/Melvanimate/src/effects/EQ.h",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/effects/EQvisualiser.h",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/Palette.h",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/Melvanimate.h",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/effects/EQ.cpp",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/effects/EQ.h",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/Melvanimate.cpp",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/MelvanimateMQTT.h",
		"/Users/amelvin/platformio/melvanimate/src/Melvanimate-example.ino",
		"/Users/amelvin/platformio/melvanimate/.pioenvs/nodemcu2/melvanimate/EffectManager.h",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/effects/SimpleEffect.h",
		"/Users/amelvin/platformio/melvanimate/lib/ESPmanager/ESPmanager.h",
		"/Users/amelvin/platformio/melvanimate/.pioenvs/nodemcu2/ESPmanager/ESPmanager.h",
		"/Users/amelvin/platformio/melvanimate/lib/ESPmanager/examples/ESPmanager-example/ESPmanager-example.ino",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/effects/RainbowChase.h",
		"/Users/amelvin/platformio/melvanimate/lib/ESPmanager/README.md",
		"/Users/amelvin/platformio/melvanimate/data/index.htm",
		"/Users/amelvin/Dropbox/Sketchbook/libraries/Melvanimate/README.md",
		"/Users/amelvin/platformio/melvanimate/src/EffectCallbacks.ino",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/Palette.cpp",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/helperfunc.cpp",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/effects/Blobs.h",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/PropertyManager.cpp",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/EffectHandler.cpp",
		"/Users/amelvin/platformio/melvanimate/platformio.ini",
		"/Users/amelvin/Arduino/ESP31B/tools/gen_appbin.py",
		"/Users/amelvin/Dropbox/Sketchbook/libraries/Melvanimate/src/MelvanimateMQTT.cpp",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/effects/Snakes.h",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/ObjectManager.cpp",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/Melvtrix.h",
		"/Users/amelvin/Dropbox/Sketchbook/libraries/Melvanimate/src/effects/Blobs.h",
		"/Users/amelvin/Dropbox/Sketchbook/libraries/Melvanimate/src/effects/Blobs.cpp",
		"/Users/amelvin/platformio/melvanimate/src/data/index.htm",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/effects/Effect2.h",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/effects/AdalightEffect.h",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/effects/DMXEffect.h",
		"/Users/amelvin/Dropbox/Sketchbook/libraries/Melvanimate/src/effects/RainbowChase.h",
		"/Users/amelvin/platformio/melvanimate/lib/melvanimate/effects/UDPEffect.h"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"/Users/amelvin/platformio/melvanimate",
			"/Users/amelvin/platformio/melvanimate/lib/ESPmanager",
			"/Users/amelvin/platformio/melvanimate/lib/melvanimate",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"ESP",
			"Running delayed",
			"second",
			"lock",
			"Task",
			"TaskT",
			"Task",
			"std::bind",
			"std::",
			"send",
			"melvanimate",
			"_currentdevice =",
			"192.168.1.214",
			"BeatsTest",
			"getJSON",
			"get",
			"data.esp",
			"_HTTP.arg",
			"_HTTP.hasArg",
			"fontCapHeight",
			"pinModeFast",
			"ICACHE_RAM_ATTR",
			"_parse",
			"parse(",
			"Serial.",
			"serial.",
			"cache",
			"ESP.get",
			"HTTPClient",
			"ifdef",
			"_position =",
			"TIME_BASED_RANDOM",
			"_input",
			"palette()->input",
			"input",
			"_input",
			"_pdeviceid",
			"\"deviceid\"",
			"StringtoIP",
			"IPtoString",
			"Settings:",
			"[Variable::addJsonProperty] _changed",
			"setChanged",
			"while",
			"do",
			"placeholders",
			"using",
			"_loadGeneral",
			"resart",
			"&",
			"_FilesCheck",
			"_APssid",
			"remove",
			"_pass_hardcoded",
			"dump",
			"_prepare",
			"numberofpresets",
			"strip",
			"[EffectManager::addAllpresets]",
			"[EffectManager::nextFreePresetArray]",
			"_presetcountS",
			"parsespiffs(",
			"par",
			"preset->file;",
			"FileID = preset->file;",
			".prettyPrintTo(Serial)",
			"root.prettyPrintTo(Serial)",
			"lastIndexOf",
			"c_",
			"code = (bool)",
			"jsonBuffer",
			"[save] ID",
			"SPIFFS",
			"Save(",
			"Start(",
			"Load(",
			"Load",
			"Serial.write",
			"Debugf",
			"lights.",
			"HTTP.",
			"DynamicJsonBuffer",
			"get",
			"parse",
			"Load(",
			"[handle]",
			"timer",
			"Serial",
			"save_flag",
			"modechange",
			"iterator",
			"_preset_names",
			"SendFailhere",
			"pixellatchtime",
			"ada_sent",
			"prefixcount",
			"effect_timeout",
			"state",
			"effectbuf_position",
			"stripBuffer",
			"strip_b",
			"Serial",
			"EffectHandler::",
			"SwitchEffect::",
			"SwitchEffect",
			"toggle",
			"SetToggle",
			"purge",
			"_parsespiffs",
			"_par",
			"os",
			"pretty",
			"proxy",
			"data = new char[f.size()];",
			"yield(",
			"delay(",
			"delay",
			"yield",
			"server.",
			"REQUeST",
			"HTTP.",
			"_preset",
			"getPreset",
			"_preset",
			"get",
			"_parse",
			"autowait",
			"_parsespiffs"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"Beats",
			"request->getHeader",
			"request->hasHeader",
			"",
			"_pdeviceid",
			"DebugMelvanimatef",
			"",
			"_HTTP.",
			"_vars->pixellatchtime",
			"_vars->ada_sent",
			"_vars->prefixcount",
			"_vars->effect_timeout",
			"_vars->state",
			"_vars->effectbuf_position",
			"_Serial",
			"parsespiffs",
			"HTTP.",
			"request",
			"request->",
			"ESPmanager::",
			"\"]",
			"[\"",
			"[F(",
			"\")]",
			"[PSTR(\"",
			"//yield();",
			"WS2812_Settings.Timer",
			"effectPosition",
			"//strip->LinearFadePixelColor",
			"animations.IsAnimating()",
			"buf",
			"",
			"strip->",
			"strip->\n",
			"strip->Show();\n"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": true,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/TaskerClass.h",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 5908,
						"regions":
						{
						},
						"selection":
						[
							[
								435,
								435
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 257.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				0,
				1,
				1,
				2
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			0.7664297862,
			1.0
		]
	},
	"menu_visible": true,
	"output.Deviot|Build1452168205.916934":
	{
		"height": 94.0
	},
	"output.Deviot|Build1452168922.23685":
	{
		"height": 94.0
	},
	"output.Deviot|Build1452169008.47005":
	{
		"height": 94.0
	},
	"output.astyle_error_message":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 199.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.hex_viewer_inspector":
	{
		"height": 94.0
	},
	"pinned_build_system": "PlatformIO",
	"project": "Tasker.sublime-project",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 326.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
